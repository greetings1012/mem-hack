attach 6807
canary
q
disassemble main
info func
start
got
q
disassemble *main
q
disassemble *main
b *main+12
r
ni
ni
b *main+54
c
ni
ni
ni
ni
q
catch syscall arch-prctl
catch syscall arch_prctl
r
c
x/gx 0x7ffff7fb8540+0x28
q
q
file ./no_canary
start
info proc mappings
x/s 0x7ffff7dc5000
find 0x7ffff7dc5000,0x7ffff7f5f000,"system"
find 0x7ffff7dc5000,0x7ffff7f5f000,"/bin/sh"
# libc의 데이터 섹션에서 문자열 찾기
x/s 0x7ffff7dc5000
find 0x7ffff7dc5000,0x7ffff7f5f000,"sh"
pwndbg> x/s 0x7ffff7dc5000
0x7ffff7dc5000:"\177ELF\002\001\001\003"
pwndbg> find 0x7ffff7dc5000,0x7ffff7f5f000,"sh"
0x7ffff7dd7dd1
0x7ffff7dd8edf
0x7ffff7dd9110
0x7ffff7dd950e
0x7ffff7dd9596
0x7ffff7ddb53d
0x7ffff7ddbdf7
0x7ffff7ddc0fc
8 patterns found.
find 0x7ffff7dc5000,0x7ffff7f5f000,"/bin/sh"
find 0x7ffff7dc5000,0x7ffff7f5f000,"/bin/sh"
x/s 0x7ffff7dd7dd1
x/s 0x7ffff7dd8edf
x/s 0x7ffff7dd9110
x/s 0x7ffff7dd950e
x/s 0x7ffff7dd9596
x/s 0x7ffff7ddb53d
x/s 0x7ffff7ddbdf7
x/s 0x7ffff7ddc0fc
q
disassemble main
break *main_21
flie ./no_canary
start
break *main+21
run
x/gx $rax
q
p system
file ./no_canary
p system
q
disassemble *main
q
disassemble *main
b *main +12
r
ni
ni
b *main+54
c
ni
ni
q
catch
catch syscall arch_prctl
r
c
x/gx 0x7fffffffdeb0
x/gx 0x7fffffffdeb0+0x28
x/gx 0x7ffff7fb8540+0x28
sudo x/gx 0x7ffff7fb8540+0x28
q
catch syscall arch_prctl
r
c
c
x/gx 0x7ffff7fb8540
x/gx 0x7ffff7fb8540+0x28
b *main+21
c
x/gx 0x7ffff7fb8540+0x28
i r $rax
c
i r $rax
x/gx 0x7ffff7fb8540+0x28
q
